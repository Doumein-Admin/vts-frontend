@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Dark AI theme with glassomorphic design */
    --background: 220 26% 6%;
    --foreground: 210 20% 95%;

    --card: 220 26% 8%;
    --card-foreground: 210 20% 95%;

    --popover: 220 26% 8%;
    --popover-foreground: 210 20% 95%;

    --primary: 263 85% 65%;
    --primary-foreground: 210 20% 5%;

    --secondary: 220 26% 12%;
    --secondary-foreground: 210 20% 95%;

    --muted: 220 26% 12%;
    --muted-foreground: 215 15% 65%;

    --accent: 263 85% 65%;
    --accent-foreground: 210 20% 5%;

    --destructive: 0 75% 60%;
    --destructive-foreground: 210 20% 95%;

    --border: 220 26% 15%;
    --input: 220 26% 15%;
    --ring: 263 85% 65%;

    --radius: 1rem;

    /* AI-specific design tokens */
    --ai-primary: 263 85% 65%;
    --ai-secondary: 280 75% 70%;
    --ai-accent: 200 85% 60%;
    --ai-surface: 220 26% 8%;
    --ai-surface-elevated: 220 26% 12%;
    --ai-glass: 220 26% 15%;
    
    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--ai-primary)), hsl(var(--ai-secondary)));
    --gradient-glass: linear-gradient(135deg, hsl(var(--ai-glass) / 0.15), hsl(var(--ai-glass) / 0.05));
    --gradient-ai: linear-gradient(135deg, hsl(var(--ai-primary) / 0.2), hsl(var(--ai-accent) / 0.2));
    
    /* Shadows */
    --shadow-glass: 0 8px 32px 0 hsl(var(--ai-primary) / 0.1);
    --shadow-glow: 0 0 50px hsl(var(--ai-primary) / 0.3);
    --shadow-recording: 0 0 0 0 hsl(var(--ai-primary) / 0.7);
    
    /* Animations */
    --transition-smooth: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);

    --radius: 1rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground overflow-hidden;
    background: radial-gradient(ellipse at center, hsl(var(--ai-primary) / 0.05) 0%, hsl(var(--background)) 70%);
  }
}

@layer components {
  /* Glass morphism effects */
  .glass {
    background: var(--gradient-glass);
    backdrop-filter: blur(20px);
    border: 1px solid hsl(var(--ai-glass) / 0.2);
    box-shadow: var(--shadow-glass);
  }

  .glass-intense {
    background: linear-gradient(135deg, hsl(var(--ai-glass) / 0.25), hsl(var(--ai-glass) / 0.1));
    backdrop-filter: blur(40px);
    border: 1px solid hsl(var(--ai-glass) / 0.3);
    box-shadow: var(--shadow-glass), inset 0 1px 0 hsl(var(--ai-glass) / 0.1);
  }

  /* Recording animations */
  .recording-pulse {
    animation: recording-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    box-shadow: 0 0 0 0 hsl(var(--ai-primary) / 0.7);
  }

  .recording-glow {
    box-shadow: var(--shadow-glow);
  }

  /* AI-style animations */
  .ai-fade-in {
    animation: ai-fade-in 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  .ai-slide-left {
    animation: ai-slide-left 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  .ai-scale-in {
    animation: ai-scale-in 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }

  /* Transcript container */
  .transcript-container {
    animation: transcript-expand 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }
}

@layer utilities {
  .transition-ai {
    transition: var(--transition-smooth);
  }

  .transition-bounce {
    transition: var(--transition-bounce);
  }
}

/* Keyframes */
@keyframes recording-pulse {
  0% {
    box-shadow: 0 0 0 0 hsl(var(--ai-primary) / 0.7);
  }
  70% {
    box-shadow: 0 0 0 20px hsl(var(--ai-primary) / 0);
  }
  100% {
    box-shadow: 0 0 0 0 hsl(var(--ai-primary) / 0);
  }
}

@keyframes ai-fade-in {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes ai-slide-left {
  from {
    transform: translate(-50%, -50%) scale(1);
  }
  to {
    transform: translate(-80vw, -80vh) scale(0.6);
  }
}

@keyframes ai-scale-in {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes transcript-expand {
  from {
    opacity: 0;
    transform: translateX(100px);
    width: 0;
  }
  to {
    opacity: 1;
    transform: translateX(0);
    width: 100%;
  }
}
